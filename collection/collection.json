{
	"info": {
		"_postman_id": "3600a7bc-9101-4e77-a37f-a3a981d256a7",
		"name": "Dmoney-User-B6",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19869486"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "User login with invalid creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=pm.response.json();\r",
									"pm.collectionVariables.set(\"token\",jsonData.token)\r",
									"\r",
									"pm.test(\"User get error if input wrong creds\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contain(\"Password incorrect\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\":\"salman@roadtocareer.net\",\r\n\t\"password\":\"1234454\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User login with invalid user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=pm.response.json();\r",
									"pm.collectionVariables.set(\"token\",jsonData.token)\r",
									"\r",
									"\r",
									"pm.test(\"User will get error if user input wrong email\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contain(\"User not found\");\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\":\"wrong@roadtocareer.net\",\r\n\t\"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User login with valid creds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=pm.response.json();\r",
									"pm.collectionVariables.set(\"token\",jsonData.token)\r",
									"\r",
									"pm.test(\"Check if user logged successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contain(\"Login successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\":\"salman@roadtocareer.net\",\r\n\t\"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User List",
			"item": [
				{
					"name": "User_List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check User list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contain(\"User list\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check if user 1 exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.users[0].id).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if user 2 exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.users[1].id).to.eql(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if user 3 exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.users[2].id).to.eql(4);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if user 644 exist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.users[644].id).to.eql(773);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/list",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"list"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Search",
			"item": [
				{
					"name": "User_Search",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{baseUrl}}/user/search?id=43",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"search"
							],
							"query": [
								{
									"key": "id",
									"value": "43"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create User",
			"item": [
				{
					"name": "Create New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if user created successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contain(\"User created successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"var userId= jsonData.user.id;\r",
									"\r",
									"pm.collectionVariables.set(\"userId\",jsonData.user.id);\r",
									"pm.collectionVariables.set(\"name\",jsonData.user.name);\r",
									"pm.collectionVariables.set(\"email\",jsonData.user.email);\r",
									"pm.collectionVariables.set(\"password\",jsonData.user.password);\r",
									"pm.collectionVariables.set(\"phone_number\",jsonData.user.phone_number);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomId=_.random(10000,99999);\r",
									"pm.collectionVariables.set(\"id\",randomId)\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"0138{{id}}29\",\r\n    \"nid\":\"123{{id}}90\",\r\n    \"role\":\"Customer\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user with existing email and phone number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if user cannot registration with existing data\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contain(\"User already exists\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Hasan Abdullah\",\r\n    \"email\":\"hasan@gmail.com\",\r\n    \"password\":\"123466\",\r\n    \"phone_number\":\"01382982050\",\r\n    \"nid\":\"1234567890\",\r\n    \"role\":\"Customer\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update User",
			"item": [
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if user updated successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contain(\"User updated successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check name validation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.name).to.contain(\"Tajul Islam\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Tajul Islam\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01547{{id}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Customer\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/update/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"update",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User patch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if user updated successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contain(\"User updated successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check name validation\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.name).to.contain(\"Tajul Islam\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Tajul Islam\",\r\n    \"email\":\"{{$randomEmail}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/update/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"update",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete User",
			"item": [
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check delete user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contain(\"User deleted successfully\");\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/delete/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"delete",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleted user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check delete user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.contain(\"User not found\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-SECRET-KEY",
								"value": "{{partnerKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/delete/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"delete",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjc0MTQ0MTQxLCJleHAiOjE2NzQxNDU5NDF9.EdgU6T__wh5EBRFJkhMjr2Izuwcf7--eTrLOeH9JNvw"
		},
		{
			"key": "baseUrl",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "partnerKey",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "id",
			"value": 56901
		},
		{
			"key": "userId",
			"value": 983
		},
		{
			"key": "name",
			"value": "Kay Lesch"
		},
		{
			"key": "email",
			"value": "Vince_Predovic@hotmail.com"
		},
		{
			"key": "password",
			"value": "1234"
		},
		{
			"key": "phone_number",
			"value": "01385690129"
		}
	]
}